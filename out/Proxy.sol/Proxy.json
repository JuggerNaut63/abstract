{"abi":[{"type":"fallback","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap/\",\":forge-std/=lib/forge-std/src/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap/=lib/uniswap/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/@openzeppelin/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap/","forge-std/=lib/forge-std/src/","uniswap-v3-core/=lib/uniswap-v3-core/contracts/","uniswap/=lib/uniswap/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/@openzeppelin/contracts/proxy/Proxy.sol":"Proxy"},"evmVersion":"paris","libraries":{}},"sources":{"lib/@openzeppelin/contracts/proxy/Proxy.sol":{"keccak256":"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd","urls":["bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac","dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/@openzeppelin/contracts/proxy/Proxy.sol","id":13194,"exportedSymbols":{"Proxy":[13193]},"nodeType":"SourceUnit","src":"99:2571:71","nodes":[{"id":13159,"nodeType":"PragmaDirective","src":"99:24:71","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":13193,"nodeType":"ContractDefinition","src":"724:1945:71","nodes":[{"id":13168,"nodeType":"FunctionDefinition","src":"949:895:71","nodes":[],"body":{"id":13167,"nodeType":"Block","src":"1009:835:71","nodes":[],"statements":[{"AST":{"nativeSrc":"1028:810:71","nodeType":"YulBlock","src":"1028:810:71","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:71","nodeType":"YulLiteral","src":"1281:1:71","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:71","nodeType":"YulLiteral","src":"1284:1:71","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:71","nodeType":"YulIdentifier","src":"1287:12:71"},"nativeSrc":"1287:14:71","nodeType":"YulFunctionCall","src":"1287:14:71"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:71","nodeType":"YulIdentifier","src":"1268:12:71"},"nativeSrc":"1268:34:71","nodeType":"YulFunctionCall","src":"1268:34:71"},"nativeSrc":"1268:34:71","nodeType":"YulExpressionStatement","src":"1268:34:71"},{"nativeSrc":"1429:74:71","nodeType":"YulVariableDeclaration","src":"1429:74:71","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:71","nodeType":"YulIdentifier","src":"1456:3:71"},"nativeSrc":"1456:5:71","nodeType":"YulFunctionCall","src":"1456:5:71"},{"name":"implementation","nativeSrc":"1463:14:71","nodeType":"YulIdentifier","src":"1463:14:71"},{"kind":"number","nativeSrc":"1479:1:71","nodeType":"YulLiteral","src":"1479:1:71","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:71","nodeType":"YulIdentifier","src":"1482:12:71"},"nativeSrc":"1482:14:71","nodeType":"YulFunctionCall","src":"1482:14:71"},{"kind":"number","nativeSrc":"1498:1:71","nodeType":"YulLiteral","src":"1498:1:71","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:71","nodeType":"YulLiteral","src":"1501:1:71","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:71","nodeType":"YulIdentifier","src":"1443:12:71"},"nativeSrc":"1443:60:71","nodeType":"YulFunctionCall","src":"1443:60:71"},"variables":[{"name":"result","nativeSrc":"1433:6:71","nodeType":"YulTypedName","src":"1433:6:71","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:71","nodeType":"YulLiteral","src":"1571:1:71","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:71","nodeType":"YulLiteral","src":"1574:1:71","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:71","nodeType":"YulIdentifier","src":"1577:14:71"},"nativeSrc":"1577:16:71","nodeType":"YulFunctionCall","src":"1577:16:71"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:71","nodeType":"YulIdentifier","src":"1556:14:71"},"nativeSrc":"1556:38:71","nodeType":"YulFunctionCall","src":"1556:38:71"},"nativeSrc":"1556:38:71","nodeType":"YulExpressionStatement","src":"1556:38:71"},{"cases":[{"body":{"nativeSrc":"1689:59:71","nodeType":"YulBlock","src":"1689:59:71","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:71","nodeType":"YulLiteral","src":"1714:1:71","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:71","nodeType":"YulIdentifier","src":"1717:14:71"},"nativeSrc":"1717:16:71","nodeType":"YulFunctionCall","src":"1717:16:71"}],"functionName":{"name":"revert","nativeSrc":"1707:6:71","nodeType":"YulIdentifier","src":"1707:6:71"},"nativeSrc":"1707:27:71","nodeType":"YulFunctionCall","src":"1707:27:71"},"nativeSrc":"1707:27:71","nodeType":"YulExpressionStatement","src":"1707:27:71"}]},"nativeSrc":"1682:66:71","nodeType":"YulCase","src":"1682:66:71","value":{"kind":"number","nativeSrc":"1687:1:71","nodeType":"YulLiteral","src":"1687:1:71","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:71","nodeType":"YulBlock","src":"1769:59:71","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:71","nodeType":"YulLiteral","src":"1794:1:71","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:71","nodeType":"YulIdentifier","src":"1797:14:71"},"nativeSrc":"1797:16:71","nodeType":"YulFunctionCall","src":"1797:16:71"}],"functionName":{"name":"return","nativeSrc":"1787:6:71","nodeType":"YulIdentifier","src":"1787:6:71"},"nativeSrc":"1787:27:71","nodeType":"YulFunctionCall","src":"1787:27:71"},"nativeSrc":"1787:27:71","nodeType":"YulExpressionStatement","src":"1787:27:71"}]},"nativeSrc":"1761:67:71","nodeType":"YulCase","src":"1761:67:71","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:71","nodeType":"YulIdentifier","src":"1615:6:71"},"nativeSrc":"1608:220:71","nodeType":"YulSwitch","src":"1608:220:71"}]},"evmVersion":"paris","externalReferences":[{"declaration":13163,"isOffset":false,"isSlot":false,"src":"1463:14:71","valueSize":1}],"id":13166,"nodeType":"InlineAssembly","src":"1019:819:71"}]},"documentation":{"id":13161,"nodeType":"StructuredDocumentation","src":"754:190:71","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:71","parameters":{"id":13164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13163,"mutability":"mutable","name":"implementation","nameLocation":"976:14:71","nodeType":"VariableDeclaration","scope":13168,"src":"968:22:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13162,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:71","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:71"},"returnParameters":{"id":13165,"nodeType":"ParameterList","parameters":[],"src":"1009:0:71"},"scope":13193,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":13174,"nodeType":"FunctionDefinition","src":"2028:67:71","nodes":[],"documentation":{"id":13169,"nodeType":"StructuredDocumentation","src":"1850:173:71","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:71","parameters":{"id":13170,"nodeType":"ParameterList","parameters":[],"src":"2052:2:71"},"returnParameters":{"id":13173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13174,"src":"2086:7:71","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13171,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:71","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:71"},"scope":13193,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":13184,"nodeType":"FunctionDefinition","src":"2323:83:71","nodes":[],"body":{"id":13183,"nodeType":"Block","src":"2361:45:71","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":13179,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13174,"src":"2381:15:71","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":13180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":13178,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13168,"src":"2371:9:71","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":13181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":13182,"nodeType":"ExpressionStatement","src":"2371:28:71"}]},"documentation":{"id":13175,"nodeType":"StructuredDocumentation","src":"2101:217:71","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:71","parameters":{"id":13176,"nodeType":"ParameterList","parameters":[],"src":"2341:2:71"},"returnParameters":{"id":13177,"nodeType":"ParameterList","parameters":[],"src":"2361:0:71"},"scope":13193,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":13192,"nodeType":"FunctionDefinition","src":"2603:64:71","nodes":[],"body":{"id":13191,"nodeType":"Block","src":"2639:28:71","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":13188,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13184,"src":"2649:9:71","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":13189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:71","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":13190,"nodeType":"ExpressionStatement","src":"2649:11:71"}]},"documentation":{"id":13185,"nodeType":"StructuredDocumentation","src":"2412:186:71","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":13186,"nodeType":"ParameterList","parameters":[],"src":"2611:2:71"},"returnParameters":{"id":13187,"nodeType":"ParameterList","parameters":[],"src":"2639:0:71"},"scope":13193,"stateMutability":"payable","virtual":true,"visibility":"external"}],"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":13160,"nodeType":"StructuredDocumentation","src":"125:598:71","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[13193],"name":"Proxy","nameLocation":"742:5:71","scope":13194,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":71}