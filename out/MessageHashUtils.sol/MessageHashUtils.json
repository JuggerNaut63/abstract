{"abi":[],"bytecode":{"object":"0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba175a7990eb718cc1506a4c2c7ce49aeaabc97331ec4e459134b9376ddda32c64736f6c634300081a0033","sourceMap":"521:3235:91:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ba175a7990eb718cc1506a4c2c7ce49aeaabc97331ec4e459134b9376ddda32c64736f6c634300081a0033","sourceMap":"521:3235:91:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap/\",\":forge-std/=lib/forge-std/src/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap/=lib/uniswap/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/@openzeppelin/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap/","forge-std/=lib/forge-std/src/","uniswap-v3-core/=lib/uniswap-v3-core/contracts/","uniswap/=lib/uniswap/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{}},"sources":{"lib/@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792","urls":["bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453","dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435","urls":["bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c","dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d","urls":["bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875","dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72","urls":["bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc","dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":16307,"exportedSymbols":{"MessageHashUtils":[16306],"Strings":[15657]},"nodeType":"SourceUnit","src":"123:3634:91","nodes":[{"id":16234,"nodeType":"PragmaDirective","src":"123:24:91","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":16236,"nodeType":"ImportDirective","src":"149:39:91","nodes":[],"absolutePath":"lib/@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","nameLocation":"-1:-1:-1","scope":16307,"sourceUnit":15658,"symbolAliases":[{"foreign":{"id":16235,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15657,"src":"157:7:91","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":16306,"nodeType":"ContractDefinition","src":"521:3235:91","nodes":[{"id":16247,"nodeType":"FunctionDefinition","src":"1222:460:91","nodes":[],"body":{"id":16246,"nodeType":"Block","src":"1314:368:91","nodes":[],"statements":[{"AST":{"nativeSrc":"1376:300:91","nodeType":"YulBlock","src":"1376:300:91","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:4:91","nodeType":"YulLiteral","src":"1397:4:91","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1403:34:91","nodeType":"YulLiteral","src":"1403:34:91","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1390:6:91","nodeType":"YulIdentifier","src":"1390:6:91"},"nativeSrc":"1390:48:91","nodeType":"YulFunctionCall","src":"1390:48:91"},"nativeSrc":"1390:48:91","nodeType":"YulExpressionStatement","src":"1390:48:91"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1499:4:91","nodeType":"YulLiteral","src":"1499:4:91","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1505:11:91","nodeType":"YulIdentifier","src":"1505:11:91"}],"functionName":{"name":"mstore","nativeSrc":"1492:6:91","nodeType":"YulIdentifier","src":"1492:6:91"},"nativeSrc":"1492:25:91","nodeType":"YulFunctionCall","src":"1492:25:91"},"nativeSrc":"1492:25:91","nodeType":"YulExpressionStatement","src":"1492:25:91"},{"nativeSrc":"1571:31:91","nodeType":"YulAssignment","src":"1571:31:91","value":{"arguments":[{"kind":"number","nativeSrc":"1591:4:91","nodeType":"YulLiteral","src":"1591:4:91","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1597:4:91","nodeType":"YulLiteral","src":"1597:4:91","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1581:9:91","nodeType":"YulIdentifier","src":"1581:9:91"},"nativeSrc":"1581:21:91","nodeType":"YulFunctionCall","src":"1581:21:91"},"variableNames":[{"name":"digest","nativeSrc":"1571:6:91","nodeType":"YulIdentifier","src":"1571:6:91"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":16243,"isOffset":false,"isSlot":false,"src":"1571:6:91","valueSize":1},{"declaration":16240,"isOffset":false,"isSlot":false,"src":"1505:11:91","valueSize":1}],"id":16245,"nodeType":"InlineAssembly","src":"1367:309:91"}]},"documentation":{"id":16238,"nodeType":"StructuredDocumentation","src":"552:665:91","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:91","parameters":{"id":16241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16240,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:91","nodeType":"VariableDeclaration","scope":16247,"src":"1254:19:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16239,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:91"},"returnParameters":{"id":16244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16243,"mutability":"mutable","name":"digest","nameLocation":"1306:6:91","nodeType":"VariableDeclaration","scope":16247,"src":"1298:14:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:91"},"scope":16306,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16273,"nodeType":"FunctionDefinition","src":"2148:229:91","nodes":[],"body":{"id":16272,"nodeType":"Block","src":"2234:143:91","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":16259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2286:32:91","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":16264,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16250,"src":"2343:7:91","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":16265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2351:6:91","memberName":"length","nodeType":"MemberAccess","src":"2343:14:91","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":16262,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15657,"src":"2326:7:91","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$15657_$","typeString":"type(library Strings)"}},"id":16263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:8:91","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":15470,"src":"2326:16:91","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":16266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:32:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":16261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2320:5:91","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":16260,"name":"bytes","nodeType":"ElementaryTypeName","src":"2320:5:91","typeDescriptions":{}}},"id":16267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2320:39:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":16268,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16250,"src":"2361:7:91","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":16257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2273:5:91","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":16256,"name":"bytes","nodeType":"ElementaryTypeName","src":"2273:5:91","typeDescriptions":{}}},"id":16258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:91","memberName":"concat","nodeType":"MemberAccess","src":"2273:12:91","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":16269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:96:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":16255,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2263:9:91","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":16270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2263:107:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":16254,"id":16271,"nodeType":"Return","src":"2244:126:91"}]},"documentation":{"id":16248,"nodeType":"StructuredDocumentation","src":"1688:455:91","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2157:22:91","parameters":{"id":16251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16250,"mutability":"mutable","name":"message","nameLocation":"2193:7:91","nodeType":"VariableDeclaration","scope":16273,"src":"2180:20:91","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16249,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:91","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2179:22:91"},"returnParameters":{"id":16254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16273,"src":"2225:7:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2225:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2224:9:91"},"scope":16306,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16293,"nodeType":"FunctionDefinition","src":"2720:191:91","nodes":[],"body":{"id":16292,"nodeType":"Block","src":"2831:80:91","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":16286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2875:10:91","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":16287,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16276,"src":"2887:9:91","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":16288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16278,"src":"2898:4:91","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":16284,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2858:3:91","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":16285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2862:12:91","memberName":"encodePacked","nodeType":"MemberAccess","src":"2858:16:91","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":16289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2858:45:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":16283,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2848:9:91","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":16290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2848:56:91","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":16282,"id":16291,"nodeType":"Return","src":"2841:63:91"}]},"documentation":{"id":16274,"nodeType":"StructuredDocumentation","src":"2383:332:91","text":" @dev Returns the keccak256 digest of an EIP-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2729:31:91","parameters":{"id":16279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16276,"mutability":"mutable","name":"validator","nameLocation":"2769:9:91","nodeType":"VariableDeclaration","scope":16293,"src":"2761:17:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16275,"name":"address","nodeType":"ElementaryTypeName","src":"2761:7:91","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16278,"mutability":"mutable","name":"data","nameLocation":"2793:4:91","nodeType":"VariableDeclaration","scope":16293,"src":"2780:17:91","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":16277,"name":"bytes","nodeType":"ElementaryTypeName","src":"2780:5:91","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2760:38:91"},"returnParameters":{"id":16282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16281,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16293,"src":"2822:7:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16280,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2822:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2821:9:91"},"scope":16306,"stateMutability":"pure","virtual":false,"visibility":"internal"},{"id":16305,"nodeType":"FunctionDefinition","src":"3353:401:91","nodes":[],"body":{"id":16304,"nodeType":"Block","src":"3462:292:91","nodes":[],"statements":[{"AST":{"nativeSrc":"3524:224:91","nodeType":"YulBlock","src":"3524:224:91","statements":[{"nativeSrc":"3538:22:91","nodeType":"YulVariableDeclaration","src":"3538:22:91","value":{"arguments":[{"kind":"number","nativeSrc":"3555:4:91","nodeType":"YulLiteral","src":"3555:4:91","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3549:5:91","nodeType":"YulIdentifier","src":"3549:5:91"},"nativeSrc":"3549:11:91","nodeType":"YulFunctionCall","src":"3549:11:91"},"variables":[{"name":"ptr","nativeSrc":"3542:3:91","nodeType":"YulTypedName","src":"3542:3:91","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3580:3:91","nodeType":"YulIdentifier","src":"3580:3:91"},{"hexValue":"1901","kind":"string","nativeSrc":"3585:10:91","nodeType":"YulLiteral","src":"3585:10:91","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3573:6:91","nodeType":"YulIdentifier","src":"3573:6:91"},"nativeSrc":"3573:23:91","nodeType":"YulFunctionCall","src":"3573:23:91"},"nativeSrc":"3573:23:91","nodeType":"YulExpressionStatement","src":"3573:23:91"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3620:3:91","nodeType":"YulIdentifier","src":"3620:3:91"},{"kind":"number","nativeSrc":"3625:4:91","nodeType":"YulLiteral","src":"3625:4:91","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3616:3:91","nodeType":"YulIdentifier","src":"3616:3:91"},"nativeSrc":"3616:14:91","nodeType":"YulFunctionCall","src":"3616:14:91"},{"name":"domainSeparator","nativeSrc":"3632:15:91","nodeType":"YulIdentifier","src":"3632:15:91"}],"functionName":{"name":"mstore","nativeSrc":"3609:6:91","nodeType":"YulIdentifier","src":"3609:6:91"},"nativeSrc":"3609:39:91","nodeType":"YulFunctionCall","src":"3609:39:91"},"nativeSrc":"3609:39:91","nodeType":"YulExpressionStatement","src":"3609:39:91"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3672:3:91","nodeType":"YulIdentifier","src":"3672:3:91"},{"kind":"number","nativeSrc":"3677:4:91","nodeType":"YulLiteral","src":"3677:4:91","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3668:3:91","nodeType":"YulIdentifier","src":"3668:3:91"},"nativeSrc":"3668:14:91","nodeType":"YulFunctionCall","src":"3668:14:91"},{"name":"structHash","nativeSrc":"3684:10:91","nodeType":"YulIdentifier","src":"3684:10:91"}],"functionName":{"name":"mstore","nativeSrc":"3661:6:91","nodeType":"YulIdentifier","src":"3661:6:91"},"nativeSrc":"3661:34:91","nodeType":"YulFunctionCall","src":"3661:34:91"},"nativeSrc":"3661:34:91","nodeType":"YulExpressionStatement","src":"3661:34:91"},{"nativeSrc":"3708:30:91","nodeType":"YulAssignment","src":"3708:30:91","value":{"arguments":[{"name":"ptr","nativeSrc":"3728:3:91","nodeType":"YulIdentifier","src":"3728:3:91"},{"kind":"number","nativeSrc":"3733:4:91","nodeType":"YulLiteral","src":"3733:4:91","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3718:9:91","nodeType":"YulIdentifier","src":"3718:9:91"},"nativeSrc":"3718:20:91","nodeType":"YulFunctionCall","src":"3718:20:91"},"variableNames":[{"name":"digest","nativeSrc":"3708:6:91","nodeType":"YulIdentifier","src":"3708:6:91"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":16301,"isOffset":false,"isSlot":false,"src":"3708:6:91","valueSize":1},{"declaration":16296,"isOffset":false,"isSlot":false,"src":"3632:15:91","valueSize":1},{"declaration":16298,"isOffset":false,"isSlot":false,"src":"3684:10:91","valueSize":1}],"id":16303,"nodeType":"InlineAssembly","src":"3515:233:91"}]},"documentation":{"id":16294,"nodeType":"StructuredDocumentation","src":"2917:431:91","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (EIP-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3362:15:91","parameters":{"id":16299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16296,"mutability":"mutable","name":"domainSeparator","nameLocation":"3386:15:91","nodeType":"VariableDeclaration","scope":16305,"src":"3378:23:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3378:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16298,"mutability":"mutable","name":"structHash","nameLocation":"3411:10:91","nodeType":"VariableDeclaration","scope":16305,"src":"3403:18:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3403:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3377:45:91"},"returnParameters":{"id":16302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16301,"mutability":"mutable","name":"digest","nameLocation":"3454:6:91","nodeType":"VariableDeclaration","scope":16305,"src":"3446:14:91","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16300,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3446:7:91","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3445:16:91"},"scope":16306,"stateMutability":"pure","virtual":false,"visibility":"internal"}],"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":16237,"nodeType":"StructuredDocumentation","src":"190:330:91","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[EIP 191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"linearizedBaseContracts":[16306],"name":"MessageHashUtils","nameLocation":"529:16:91","scope":16307,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":91}