{"abi":[{"type":"function","name":"addStake","inputs":[{"name":"unstakeDelaySec","type":"uint32","internalType":"uint32"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"deposit","inputs":[],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract IEntryPoint"}],"stateMutability":"view"},{"type":"function","name":"getDeposit","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"postOp","inputs":[{"name":"mode","type":"uint8","internalType":"enum IPaymaster.PostOpMode"},{"name":"context","type":"bytes","internalType":"bytes"},{"name":"actualGasCost","type":"uint256","internalType":"uint256"},{"name":"actualUserOpFeePerGas","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unlockStake","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"validatePaymasterUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"maxCost","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"context","type":"bytes","internalType":"bytes"},{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawStake","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"withdrawTo","inputs":[{"name":"withdrawAddress","type":"address","internalType":"address payable"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addStake(uint32)":"0396cb60","deposit()":"d0e30db0","entryPoint()":"b0d691fe","getDeposit()":"c399ec88","owner()":"8da5cb5b","postOp(uint8,bytes,uint256,uint256)":"7c627b21","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","unlockStake()":"bb9fe6bf","validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":"52b7512c","withdrawStake(address)":"c23a5cea","withdrawTo(address,uint256)":"205c2878"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"unstakeDelaySec\",\"type\":\"uint32\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IPaymaster.PostOpMode\",\"name\":\"mode\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"actualGasCost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actualUserOpFeePerGas\",\"type\":\"uint256\"}],\"name\":\"postOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"maxCost\",\"type\":\"uint256\"}],\"name\":\"validatePaymasterUserOp\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"context\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"withdrawAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addStake(uint32)\":{\"params\":{\"unstakeDelaySec\":\"- The unstake delay for this paymaster. Can only be increased.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"params\":{\"actualGasCost\":\"- Actual gas used so far (without this postOp call).\",\"actualUserOpFeePerGas\":\"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.\",\"context\":\"- The context value returned by validatePaymasterUserOp\",\"mode\":\"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp().\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"params\":{\"maxCost\":\"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).\",\"userOp\":\"- The user operation.\",\"userOpHash\":\"- Hash of the user's request data.\"},\"returns\":{\"context\":\"       - Value to send to a postOp. Zero length to signify postOp is not required.\",\"validationData\":\"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \\\"indefinite\\\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly.\"}},\"withdrawStake(address)\":{\"params\":{\"withdrawAddress\":\"- The address to send withdrawn value.\"}},\"withdrawTo(address,uint256)\":{\"params\":{\"amount\":\"- Amount to withdraw.\",\"withdrawAddress\":\"- Target to send to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStake(uint32)\":{\"notice\":\"Add stake for this paymaster. This method can also carry eth value to add to the current stake.\"},\"deposit()\":{\"notice\":\"Add a deposit for this paymaster, used for paying for transaction fees.\"},\"getDeposit()\":{\"notice\":\"Return current paymaster's deposit on the entryPoint.\"},\"postOp(uint8,bytes,uint256,uint256)\":{\"notice\":\"Post-operation handler. Must verify sender is the entryPoint.\"},\"unlockStake()\":{\"notice\":\"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again\"},\"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)\":{\"notice\":\"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns.\"},\"withdrawStake(address)\":{\"notice\":\"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)\"},\"withdrawTo(address,uint256)\":{\"notice\":\"Withdraw value from the deposit.\"}},\"notice\":\"Helper class for creating a paymaster. provides helper methods for staking. Validates that the postOp is called only by the entryPoint.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/BasePaymaster.sol\":\"BasePaymaster\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap/\",\":forge-std/=lib/forge-std/src/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap/=lib/uniswap/contracts/\"]},\"sources\":{\"contracts/core/BasePaymaster.sol\":{\"keccak256\":\"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef\",\"dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji\"]},\"contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[{"internalType":"uint32","name":"unstakeDelaySec","type":"uint32"}],"stateMutability":"payable","type":"function","name":"addStake"},{"inputs":[],"stateMutability":"payable","type":"function","name":"deposit"},{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"contract IEntryPoint","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"enum IPaymaster.PostOpMode","name":"mode","type":"uint8"},{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"actualGasCost","type":"uint256"},{"internalType":"uint256","name":"actualUserOpFeePerGas","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"postOp"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unlockStake"},{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"maxCost","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validatePaymasterUserOp","outputs":[{"internalType":"bytes","name":"context","type":"bytes"},{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"withdrawStake"},{"inputs":[{"internalType":"address payable","name":"withdrawAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"withdrawTo"}],"devdoc":{"kind":"dev","methods":{"addStake(uint32)":{"params":{"unstakeDelaySec":"- The unstake delay for this paymaster. Can only be increased."}},"owner()":{"details":"Returns the address of the current owner."},"postOp(uint8,bytes,uint256,uint256)":{"params":{"actualGasCost":"- Actual gas used so far (without this postOp call).","actualUserOpFeePerGas":"- the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas                        and maxPriorityFee (and basefee)                        It is not the same as tx.gasprice, which is what the bundler pays.","context":"- The context value returned by validatePaymasterUserOp","mode":"- Enum with the following options:                        opSucceeded - User operation succeeded.                        opReverted  - User op reverted. The paymaster still has to pay for gas.                        postOpReverted - never passed in a call to postOp()."}},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"params":{"maxCost":"- The maximum cost of this transaction (based on maximum gas and gas price from userOp).","userOp":"- The user operation.","userOpHash":"- Hash of the user's request data."},"returns":{"context":"       - Value to send to a postOp. Zero length to signify postOp is not required.","validationData":"- Signature and time-range of this operation, encoded the same as the return                          value of validateUserOperation.                          <20-byte> sigAuthorizer - 0 for valid signature, 1 to mark signature failure,                                                    other values are invalid for paymaster.                          <6-byte> validUntil - last timestamp this operation is valid. 0 for \"indefinite\"                          <6-byte> validAfter - first timestamp this operation is valid                          Note that the validation code cannot use block.timestamp (or block.number) directly."}},"withdrawStake(address)":{"params":{"withdrawAddress":"- The address to send withdrawn value."}},"withdrawTo(address,uint256)":{"params":{"amount":"- Amount to withdraw.","withdrawAddress":"- Target to send to."}}},"version":1},"userdoc":{"kind":"user","methods":{"addStake(uint32)":{"notice":"Add stake for this paymaster. This method can also carry eth value to add to the current stake."},"deposit()":{"notice":"Add a deposit for this paymaster, used for paying for transaction fees."},"getDeposit()":{"notice":"Return current paymaster's deposit on the entryPoint."},"postOp(uint8,bytes,uint256,uint256)":{"notice":"Post-operation handler. Must verify sender is the entryPoint."},"unlockStake()":{"notice":"Unlock the stake, in order to withdraw it. The paymaster can't serve requests once unlocked, until it calls addStake again"},"validatePaymasterUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32,uint256)":{"notice":"Payment validation: check if paymaster agrees to pay. Must verify sender is the entryPoint. Revert to reject this request. Note that bundlers will reject this method if it changes the state, unless the paymaster is trusted (whitelisted). The paymaster pre-pays using its deposit, and receive back a refund after the postOp method returns."},"withdrawStake(address)":{"notice":"Withdraw the entire paymaster's stake. stake must be unlocked first (and then wait for the unstakeDelay to be over)"},"withdrawTo(address,uint256)":{"notice":"Withdraw value from the deposit."}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/@openzeppelin/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap/","forge-std/=lib/forge-std/src/","uniswap-v3-core/=lib/uniswap-v3-core/contracts/","uniswap/=lib/uniswap/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/core/BasePaymaster.sol":"BasePaymaster"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/core/BasePaymaster.sol":{"keccak256":"0x156dd80127599c02937985a4fe44dd6424e29445af9aae886aff0f1993af43ab","urls":["bzz-raw://9a6afd9203f905b1d9a95f354e06d9b61328e5d27844d96100175718edb859ef","dweb:/ipfs/QmYyKGTMaTyjDKY1QyThLJL8BZgUrTAxrHL3SNmRJLqnji"],"license":"GPL-3.0"},"contracts/core/Helpers.sol":{"keccak256":"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6","urls":["bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e","dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc"],"license":"GPL-3.0"},"contracts/core/UserOperationLib.sol":{"keccak256":"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b","urls":["bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc","dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS"],"license":"GPL-3.0"},"contracts/interfaces/IAggregator.sol":{"keccak256":"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588","urls":["bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155","dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5"],"license":"GPL-3.0"},"contracts/interfaces/IEntryPoint.sol":{"keccak256":"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4","urls":["bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9","dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe"],"license":"GPL-3.0"},"contracts/interfaces/INonceManager.sol":{"keccak256":"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb","urls":["bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3","dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk"],"license":"GPL-3.0"},"contracts/interfaces/IPaymaster.sol":{"keccak256":"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f","urls":["bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8","dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt"],"license":"GPL-3.0"},"contracts/interfaces/IStakeManager.sol":{"keccak256":"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04","urls":["bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00","dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj"],"license":"GPL-3.0-only"},"contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"},"lib/@openzeppelin/contracts/access/Ownable.sol":{"keccak256":"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb","urls":["bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6","dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3","urls":["bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867","dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"],"license":"MIT"},"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"contracts/core/BasePaymaster.sol","id":410,"exportedSymbols":{"BasePaymaster":[409],"Context":[14903],"IAggregator":[4088],"IERC165":[16342],"IEntryPoint":[4272],"INonceManager":[4352],"IPaymaster":[4389],"IStakeManager":[4493],"Ownable":[12644],"PackedUserOperation":[4515],"UserOperationLib":[4024],"calldataKeccak":[3103],"min":[3121]},"nodeType":"SourceUnit","src":"36:5762:1","nodes":[{"id":140,"nodeType":"PragmaDirective","src":"36:24:1","nodes":[],"literals":["solidity","^","0.8",".23"]},{"id":141,"nodeType":"ImportDirective","src":"99:52:1","nodes":[],"absolutePath":"lib/@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","nameLocation":"-1:-1:-1","scope":410,"sourceUnit":12645,"symbolAliases":[],"unitAlias":""},{"id":142,"nodeType":"ImportDirective","src":"152:65:1","nodes":[],"absolutePath":"lib/@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"@openzeppelin/contracts/utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":410,"sourceUnit":16343,"symbolAliases":[],"unitAlias":""},{"id":143,"nodeType":"ImportDirective","src":"218:38:1","nodes":[],"absolutePath":"contracts/interfaces/IPaymaster.sol","file":"../interfaces/IPaymaster.sol","nameLocation":"-1:-1:-1","scope":410,"sourceUnit":4390,"symbolAliases":[],"unitAlias":""},{"id":144,"nodeType":"ImportDirective","src":"257:39:1","nodes":[],"absolutePath":"contracts/interfaces/IEntryPoint.sol","file":"../interfaces/IEntryPoint.sol","nameLocation":"-1:-1:-1","scope":410,"sourceUnit":4273,"symbolAliases":[],"unitAlias":""},{"id":145,"nodeType":"ImportDirective","src":"297:32:1","nodes":[],"absolutePath":"contracts/core/UserOperationLib.sol","file":"./UserOperationLib.sol","nameLocation":"-1:-1:-1","scope":410,"sourceUnit":4025,"symbolAliases":[],"unitAlias":""},{"id":409,"nodeType":"ContractDefinition","src":"483:5314:1","nodes":[{"id":153,"nodeType":"VariableDeclaration","src":"544:39:1","nodes":[],"constant":false,"functionSelector":"b0d691fe","mutability":"immutable","name":"entryPoint","nameLocation":"573:10:1","scope":409,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"},"typeName":{"id":152,"nodeType":"UserDefinedTypeName","pathNode":{"id":151,"name":"IEntryPoint","nameLocations":["544:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":4272,"src":"544:11:1"},"referencedDeclaration":4272,"src":"544:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"visibility":"public"},{"id":157,"nodeType":"VariableDeclaration","src":"590:108:1","nodes":[],"constant":true,"mutability":"constant","name":"PAYMASTER_VALIDATION_GAS_OFFSET","nameLocation":"616:31:1","scope":409,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"590:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":155,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"650:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$4024_$","typeString":"type(library UserOperationLib)"}},"id":156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"667:31:1","memberName":"PAYMASTER_VALIDATION_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":3677,"src":"650:48:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":161,"nodeType":"VariableDeclaration","src":"704:100:1","nodes":[],"constant":true,"mutability":"constant","name":"PAYMASTER_POSTOP_GAS_OFFSET","nameLocation":"730:27:1","scope":409,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":159,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"760:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$4024_$","typeString":"type(library UserOperationLib)"}},"id":160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"777:27:1","memberName":"PAYMASTER_POSTOP_GAS_OFFSET","nodeType":"MemberAccess","referencedDeclaration":3680,"src":"760:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":165,"nodeType":"VariableDeclaration","src":"810:88:1","nodes":[],"constant":true,"mutability":"constant","name":"PAYMASTER_DATA_OFFSET","nameLocation":"836:21:1","scope":409,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"810:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"expression":{"id":163,"name":"UserOperationLib","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"860:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_UserOperationLib_$4024_$","typeString":"type(library UserOperationLib)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"877:21:1","memberName":"PAYMASTER_DATA_OFFSET","nodeType":"MemberAccess","referencedDeclaration":3683,"src":"860:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"id":184,"nodeType":"FunctionDefinition","src":"905:149:1","nodes":[],"body":{"id":183,"nodeType":"Block","src":"962:92:1","nodes":[],"statements":[{"expression":{"arguments":[{"id":176,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1001:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}],"id":175,"name":"_validateEntryPointInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"972:28:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IEntryPoint_$4272_$returns$__$","typeString":"function (contract IEntryPoint)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"972:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":178,"nodeType":"ExpressionStatement","src":"972:41:1"},{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":179,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"1023:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":180,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":168,"src":"1036:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"src":"1023:24:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":182,"nodeType":"ExpressionStatement","src":"1023:24:1"}]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"950:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"954:6:1","memberName":"sender","nodeType":"MemberAccess","src":"950:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":173,"kind":"baseConstructorSpecifier","modifierName":{"id":170,"name":"Ownable","nameLocations":["942:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":12644,"src":"942:7:1"},"nodeType":"ModifierInvocation","src":"942:19:1"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"_entryPoint","nameLocation":"929:11:1","nodeType":"VariableDeclaration","scope":184,"src":"917:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"},"typeName":{"id":167,"nodeType":"UserDefinedTypeName","pathNode":{"id":166,"name":"IEntryPoint","nameLocations":["917:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":4272,"src":"917:11:1"},"referencedDeclaration":4272,"src":"917:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"916:25:1"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"962:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":207,"nodeType":"FunctionDefinition","src":"1173:218:1","nodes":[],"body":{"id":206,"nodeType":"Block","src":"1253:138:1","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"arguments":[{"id":199,"name":"IEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"1324:11:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$4272_$","typeString":"type(contract IEntryPoint)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IEntryPoint_$4272_$","typeString":"type(contract IEntryPoint)"}],"id":198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1319:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1319:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IEntryPoint_$4272","typeString":"type(contract IEntryPoint)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1337:11:1","memberName":"interfaceId","nodeType":"MemberAccess","src":"1319:29:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"arguments":[{"arguments":[{"id":194,"name":"_entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1287:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}],"id":193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1279:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"1279:7:1","typeDescriptions":{}}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1279:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":191,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16342,"src":"1271:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$16342_$","typeString":"type(contract IERC165)"}},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1271:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$16342","typeString":"contract IERC165"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1301:17:1","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":16341,"src":"1271:47:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view external returns (bool)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1271:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"49456e747279506f696e7420696e74657266616365206d69736d61746368","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1351:32:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""},"value":"IEntryPoint interface mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7960c93a5f91001fe3b3e9a56f8716da93c29bf7a3aa7adb703901f21a308af8","typeString":"literal_string \"IEntryPoint interface mismatch\""}],"id":190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1263:121:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":205,"nodeType":"ExpressionStatement","src":"1263:121:1"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_validateEntryPointInterface","nameLocation":"1182:28:1","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"_entryPoint","nameLocation":"1223:11:1","nodeType":"VariableDeclaration","scope":207,"src":"1211:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"},"typeName":{"id":186,"nodeType":"UserDefinedTypeName","pathNode":{"id":185,"name":"IEntryPoint","nameLocations":["1211:11:1"],"nodeType":"IdentifierPath","referencedDeclaration":4272,"src":"1211:11:1"},"referencedDeclaration":4272,"src":"1211:11:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"visibility":"internal"}],"src":"1210:25:1"},"returnParameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"1253:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":233,"nodeType":"FunctionDefinition","src":"1428:321:1","nodes":[],"body":{"id":232,"nodeType":"Block","src":"1638:111:1","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":223,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"1648:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1648:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"ExpressionStatement","src":"1648:24:1"},{"expression":{"arguments":[{"id":227,"name":"userOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"1714:6:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_calldata_ptr","typeString":"struct PackedUserOperation calldata"}},{"id":228,"name":"userOpHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"1722:10:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":229,"name":"maxCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"1734:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_calldata_ptr","typeString":"struct PackedUserOperation calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":226,"name":"_validatePaymasterUserOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"1689:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_PackedUserOperation_$4515_calldata_ptr_$_t_bytes32_$_t_uint256_$returns$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"function (struct PackedUserOperation calldata,bytes32,uint256) returns (bytes memory,uint256)"}},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1689:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(bytes memory,uint256)"}},"functionReturnParameters":222,"id":231,"nodeType":"Return","src":"1682:60:1"}]},"baseFunctions":[4375],"documentation":{"id":208,"nodeType":"StructuredDocumentation","src":"1397:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"52b7512c","implemented":true,"kind":"function","modifiers":[],"name":"validatePaymasterUserOp","nameLocation":"1437:23:1","overrides":{"id":217,"nodeType":"OverrideSpecifier","overrides":[],"src":"1574:8:1"},"parameters":{"id":216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"userOp","nameLocation":"1499:6:1","nodeType":"VariableDeclaration","scope":233,"src":"1470:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"PackedUserOperation","nameLocations":["1470:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":4515,"src":"1470:19:1"},"referencedDeclaration":4515,"src":"1470:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"userOpHash","nameLocation":"1523:10:1","nodeType":"VariableDeclaration","scope":233,"src":"1515:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":212,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1515:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":215,"mutability":"mutable","name":"maxCost","nameLocation":"1551:7:1","nodeType":"VariableDeclaration","scope":233,"src":"1543:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1543:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1460:104:1"},"returnParameters":{"id":222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"context","nameLocation":"1605:7:1","nodeType":"VariableDeclaration","scope":233,"src":"1592:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":218,"name":"bytes","nodeType":"ElementaryTypeName","src":"1592:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"validationData","nameLocation":"1622:14:1","nodeType":"VariableDeclaration","scope":233,"src":"1614:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1614:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1591:46:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":248,"nodeType":"FunctionDefinition","src":"1978:210:1","nodes":[],"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"1755:218:1","text":" Validate a user operation.\n @param userOp     - The user operation.\n @param userOpHash - The hash of the user operation.\n @param maxCost    - The maximum cost of the user operation."},"implemented":false,"kind":"function","modifiers":[],"name":"_validatePaymasterUserOp","nameLocation":"1987:24:1","parameters":{"id":242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"userOp","nameLocation":"2050:6:1","nodeType":"VariableDeclaration","scope":248,"src":"2021:35:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":236,"nodeType":"UserDefinedTypeName","pathNode":{"id":235,"name":"PackedUserOperation","nameLocations":["2021:19:1"],"nodeType":"IdentifierPath","referencedDeclaration":4515,"src":"2021:19:1"},"referencedDeclaration":4515,"src":"2021:19:1","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":239,"mutability":"mutable","name":"userOpHash","nameLocation":"2074:10:1","nodeType":"VariableDeclaration","scope":248,"src":"2066:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":238,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2066:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"maxCost","nameLocation":"2102:7:1","nodeType":"VariableDeclaration","scope":248,"src":"2094:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2011:104:1"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"context","nameLocation":"2155:7:1","nodeType":"VariableDeclaration","scope":248,"src":"2142:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":243,"name":"bytes","nodeType":"ElementaryTypeName","src":"2142:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"validationData","nameLocation":"2172:14:1","nodeType":"VariableDeclaration","scope":248,"src":"2164:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2141:46:1"},"scope":409,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":273,"nodeType":"FunctionDefinition","src":"2225:278:1","nodes":[],"body":{"id":272,"nodeType":"Block","src":"2392:111:1","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":262,"name":"_requireFromEntryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2402:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2402:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":264,"nodeType":"ExpressionStatement","src":"2402:24:1"},{"expression":{"arguments":[{"id":266,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":252,"src":"2444:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"}},{"id":267,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"2450:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":268,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2459:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":269,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"2474:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":265,"name":"_postOp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":297,"src":"2436:7:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_enum$_PostOpMode_$4360_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"2436:60:1"}]},"baseFunctions":[4388],"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"2194:26:1","text":"@inheritdoc IPaymaster"},"functionSelector":"7c627b21","implemented":true,"kind":"function","modifiers":[],"name":"postOp","nameLocation":"2234:6:1","overrides":{"id":260,"nodeType":"OverrideSpecifier","overrides":[],"src":"2383:8:1"},"parameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"mode","nameLocation":"2261:4:1","nodeType":"VariableDeclaration","scope":273,"src":"2250:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":251,"nodeType":"UserDefinedTypeName","pathNode":{"id":250,"name":"PostOpMode","nameLocations":["2250:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":4360,"src":"2250:10:1"},"referencedDeclaration":4360,"src":"2250:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":254,"mutability":"mutable","name":"context","nameLocation":"2290:7:1","nodeType":"VariableDeclaration","scope":273,"src":"2275:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":253,"name":"bytes","nodeType":"ElementaryTypeName","src":"2275:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"actualGasCost","nameLocation":"2315:13:1","nodeType":"VariableDeclaration","scope":273,"src":"2307:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":255,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"2346:21:1","nodeType":"VariableDeclaration","scope":273,"src":"2338:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"2338:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2240:133:1"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"2392:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":297,"nodeType":"FunctionDefinition","src":"3507:378:1","nodes":[],"body":{"id":296,"nodeType":"Block","src":"3674:211:1","nodes":[],"statements":[{"expression":{"components":[{"id":286,"name":"mode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3685:4:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"}},{"id":287,"name":"context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":279,"src":"3691:7:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":288,"name":"actualGasCost","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"3700:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":289,"name":"actualUserOpFeePerGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3715:21:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":290,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3684:53:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_PostOpMode_$4360_$_t_bytes_calldata_ptr_$_t_uint256_$_t_uint256_$","typeString":"tuple(enum IPaymaster.PostOpMode,bytes calldata,uint256,uint256)"}},"id":291,"nodeType":"ExpressionStatement","src":"3684:53:1"},{"expression":{"arguments":[{"hexValue":"6d757374206f76657272696465","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3862:15:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""},"value":"must override"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_cfebc7a599a78eb43bf12fd80d02a05464d681b0cdda54c5b6b39e95676c7f1d","typeString":"literal_string \"must override\""}],"id":292,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3855:6:1","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3855:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":295,"nodeType":"ExpressionStatement","src":"3855:23:1"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2509:993:1","text":" Post-operation handler.\n (verified to be called only through the entryPoint)\n @dev If subclass returns a non-empty context from validatePaymasterUserOp,\n      it must also implement this method.\n @param mode          - Enum with the following options:\n                        opSucceeded - User operation succeeded.\n                        opReverted  - User op reverted. The paymaster still has to pay for gas.\n                        postOpReverted - never passed in a call to postOp().\n @param context       - The context value returned by validatePaymasterUserOp\n @param actualGasCost - Actual gas used so far (without this postOp call).\n @param actualUserOpFeePerGas - the gas price this UserOp pays. This value is based on the UserOp's maxFeePerGas\n                        and maxPriorityFee (and basefee)\n                        It is not the same as tx.gasprice, which is what the bundler pays."},"implemented":true,"kind":"function","modifiers":[],"name":"_postOp","nameLocation":"3516:7:1","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":277,"mutability":"mutable","name":"mode","nameLocation":"3544:4:1","nodeType":"VariableDeclaration","scope":297,"src":"3533:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"PostOpMode","nameLocations":["3533:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":4360,"src":"3533:10:1"},"referencedDeclaration":4360,"src":"3533:10:1","typeDescriptions":{"typeIdentifier":"t_enum$_PostOpMode_$4360","typeString":"enum IPaymaster.PostOpMode"}},"visibility":"internal"},{"constant":false,"id":279,"mutability":"mutable","name":"context","nameLocation":"3573:7:1","nodeType":"VariableDeclaration","scope":297,"src":"3558:22:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":278,"name":"bytes","nodeType":"ElementaryTypeName","src":"3558:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"actualGasCost","nameLocation":"3598:13:1","nodeType":"VariableDeclaration","scope":297,"src":"3590:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"3590:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"actualUserOpFeePerGas","nameLocation":"3629:21:1","nodeType":"VariableDeclaration","scope":297,"src":"3621:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":282,"name":"uint256","nodeType":"ElementaryTypeName","src":"3621:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3523:133:1"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"3674:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":314,"nodeType":"FunctionDefinition","src":"3986:104:1","nodes":[],"body":{"id":313,"nodeType":"Block","src":"4020:70:1","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":309,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4077:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$409","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$409","typeString":"contract BasePaymaster"}],"id":308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4069:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":307,"name":"address","nodeType":"ElementaryTypeName","src":"4069:7:1","typeDescriptions":{}}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4069:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":301,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4030:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4041:9:1","memberName":"depositTo","nodeType":"MemberAccess","referencedDeclaration":4468,"src":"4030:20:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$","typeString":"function (address) payable external"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4058:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4062:5:1","memberName":"value","nodeType":"MemberAccess","src":"4058:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4030:38:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_address_$returns$__$value","typeString":"function (address) payable external"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"4030:53:1"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"3891:90:1","text":" Add a deposit for this paymaster, used for paying for transaction fees."},"functionSelector":"d0e30db0","implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"3995:7:1","parameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"4002:2:1"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"4020:0:1"},"scope":409,"stateMutability":"payable","virtual":false,"visibility":"public"},{"id":332,"nodeType":"FunctionDefinition","src":"4255:171:1","nodes":[],"body":{"id":331,"nodeType":"Block","src":"4363:63:1","nodes":[],"statements":[{"expression":{"arguments":[{"id":327,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"4395:15:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":328,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"4412:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":324,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4373:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4384:10:1","memberName":"withdrawTo","nodeType":"MemberAccess","referencedDeclaration":4492,"src":"4373:21:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256) external"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4373:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":330,"nodeType":"ExpressionStatement","src":"4373:46:1"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"4096:154:1","text":" Withdraw value from the deposit.\n @param withdrawAddress - Target to send to.\n @param amount          - Amount to withdraw."},"functionSelector":"205c2878","implemented":true,"kind":"function","modifiers":[{"id":322,"kind":"modifierInvocation","modifierName":{"id":321,"name":"onlyOwner","nameLocations":["4353:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":12555,"src":"4353:9:1"},"nodeType":"ModifierInvocation","src":"4353:9:1"}],"name":"withdrawTo","nameLocation":"4264:10:1","parameters":{"id":320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"withdrawAddress","nameLocation":"4300:15:1","nodeType":"VariableDeclaration","scope":332,"src":"4284:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":316,"name":"address","nodeType":"ElementaryTypeName","src":"4284:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"amount","nameLocation":"4333:6:1","nodeType":"VariableDeclaration","scope":332,"src":"4325:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":318,"name":"uint256","nodeType":"ElementaryTypeName","src":"4325:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4274:71:1"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[],"src":"4363:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":350,"nodeType":"FunctionDefinition","src":"4651:140:1","nodes":[],"body":{"id":349,"nodeType":"Block","src":"4720:71:1","nodes":[],"statements":[{"expression":{"arguments":[{"id":346,"name":"unstakeDelaySec","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4768:15:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":340,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4730:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4741:8:1","memberName":"addStake","nodeType":"MemberAccess","referencedDeclaration":4474,"src":"4730:19:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$","typeString":"function (uint32) payable external"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":343,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4757:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4761:5:1","memberName":"value","nodeType":"MemberAccess","src":"4757:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4730:37:1","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint32_$returns$__$value","typeString":"function (uint32) payable external"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"4730:54:1"}]},"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"4432:214:1","text":" Add stake for this paymaster.\n This method can also carry eth value to add to the current stake.\n @param unstakeDelaySec - The unstake delay for this paymaster. Can only be increased."},"functionSelector":"0396cb60","implemented":true,"kind":"function","modifiers":[{"id":338,"kind":"modifierInvocation","modifierName":{"id":337,"name":"onlyOwner","nameLocations":["4710:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":12555,"src":"4710:9:1"},"nodeType":"ModifierInvocation","src":"4710:9:1"}],"name":"addStake","nameLocation":"4660:8:1","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"unstakeDelaySec","nameLocation":"4676:15:1","nodeType":"VariableDeclaration","scope":350,"src":"4669:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":334,"name":"uint32","nodeType":"ElementaryTypeName","src":"4669:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4668:24:1"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"4720:0:1"},"scope":409,"stateMutability":"payable","virtual":false,"visibility":"external"},{"id":365,"nodeType":"FunctionDefinition","src":"4874:111:1","nodes":[],"body":{"id":364,"nodeType":"Block","src":"4926:59:1","nodes":[],"statements":[{"expression":{"arguments":[{"arguments":[{"id":360,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4972:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_BasePaymaster_$409","typeString":"contract BasePaymaster"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_BasePaymaster_$409","typeString":"contract BasePaymaster"}],"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4964:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"4964:7:1","typeDescriptions":{}}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4964:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":356,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4943:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4954:9:1","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":4462,"src":"4943:20:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4943:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":355,"id":363,"nodeType":"Return","src":"4936:42:1"}]},"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"4797:72:1","text":" Return current paymaster's deposit on the entryPoint."},"functionSelector":"c399ec88","implemented":true,"kind":"function","modifiers":[],"name":"getDeposit","nameLocation":"4883:10:1","parameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"4893:2:1"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":365,"src":"4917:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":353,"name":"uint256","nodeType":"ElementaryTypeName","src":"4917:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:9:1"},"scope":409,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":377,"nodeType":"FunctionDefinition","src":"5144:83:1","nodes":[],"body":{"id":376,"nodeType":"Block","src":"5186:41:1","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":371,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"5196:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5207:11:1","memberName":"unlockStake","nodeType":"MemberAccess","referencedDeclaration":4478,"src":"5196:22:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$__$returns$__$","typeString":"function () external"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5196:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"5196:24:1"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"4991:148:1","text":" Unlock the stake, in order to withdraw it.\n The paymaster can't serve requests once unlocked, until it calls addStake again"},"functionSelector":"bb9fe6bf","implemented":true,"kind":"function","modifiers":[{"id":369,"kind":"modifierInvocation","modifierName":{"id":368,"name":"onlyOwner","nameLocations":["5176:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":12555,"src":"5176:9:1"},"nodeType":"ModifierInvocation","src":"5176:9:1"}],"name":"unlockStake","nameLocation":"5153:11:1","parameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"5164:2:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"5186:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":392,"nodeType":"FunctionDefinition","src":"5448:133:1","nodes":[],"body":{"id":391,"nodeType":"Block","src":"5523:58:1","nodes":[],"statements":[{"expression":{"arguments":[{"id":388,"name":"withdrawAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5558:15:1","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":385,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"5533:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5544:13:1","memberName":"withdrawStake","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"5533:24:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_payable_$returns$__$","typeString":"function (address payable) external"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"ExpressionStatement","src":"5533:41:1"}]},"documentation":{"id":378,"nodeType":"StructuredDocumentation","src":"5233:210:1","text":" Withdraw the entire paymaster's stake.\n stake must be unlocked first (and then wait for the unstakeDelay to be over)\n @param withdrawAddress - The address to send withdrawn value."},"functionSelector":"c23a5cea","implemented":true,"kind":"function","modifiers":[{"id":383,"kind":"modifierInvocation","modifierName":{"id":382,"name":"onlyOwner","nameLocations":["5513:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":12555,"src":"5513:9:1"},"nodeType":"ModifierInvocation","src":"5513:9:1"}],"name":"withdrawStake","nameLocation":"5457:13:1","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"withdrawAddress","nameLocation":"5487:15:1","nodeType":"VariableDeclaration","scope":392,"src":"5471:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"5471:15:1","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"5470:33:1"},"returnParameters":{"id":384,"nodeType":"ParameterList","parameters":[],"src":"5523:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":408,"nodeType":"FunctionDefinition","src":"5660:135:1","nodes":[],"body":{"id":407,"nodeType":"Block","src":"5711:84:1","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":397,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5729:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5733:6:1","memberName":"sender","nodeType":"MemberAccess","src":"5729:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":401,"name":"entryPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"5751:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IEntryPoint_$4272","typeString":"contract IEntryPoint"}],"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"5743:7:1","typeDescriptions":{}}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5729:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420456e747279506f696e74","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5764:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""},"value":"Sender not EntryPoint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f1183fece38266d89bbd94d1c93e02d713970166951c4c8f2c10a21e7cddae9","typeString":"literal_string \"Sender not EntryPoint\""}],"id":396,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5721:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5721:67:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":406,"nodeType":"ExpressionStatement","src":"5721:67:1"}]},"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"5587:68:1","text":" Validate the call is made from a valid entrypoint"},"implemented":true,"kind":"function","modifiers":[],"name":"_requireFromEntryPoint","nameLocation":"5669:22:1","parameters":{"id":394,"nodeType":"ParameterList","parameters":[],"src":"5691:2:1"},"returnParameters":{"id":395,"nodeType":"ParameterList","parameters":[],"src":"5711:0:1"},"scope":409,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":147,"name":"IPaymaster","nameLocations":["518:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"518:10:1"},"id":148,"nodeType":"InheritanceSpecifier","src":"518:10:1"},{"baseName":{"id":149,"name":"Ownable","nameLocations":["530:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":12644,"src":"530:7:1"},"id":150,"nodeType":"InheritanceSpecifier","src":"530:7:1"}],"canonicalName":"BasePaymaster","contractDependencies":[],"contractKind":"contract","documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"330:152:1","text":" Helper class for creating a paymaster.\n provides helper methods for staking.\n Validates that the postOp is called only by the entryPoint."},"fullyImplemented":false,"linearizedBaseContracts":[409,12644,14903,4389],"name":"BasePaymaster","nameLocation":"501:13:1","scope":410,"usedErrors":[12510,12515],"usedEvents":[12521]}],"license":"GPL-3.0"},"id":1}