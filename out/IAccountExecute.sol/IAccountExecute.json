{"abi":[{"type":"function","name":"executeUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct PackedUserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"accountGasLimits","type":"bytes32","internalType":"bytes32"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"gasFees","type":"bytes32","internalType":"bytes32"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":"8dd7712f"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"}],\"name\":\"executeUserOp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"params\":{\"userOp\":\"- The operation that was just validated.\",\"userOpHash\":\"- Hash of the user's request data.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)\":{\"notice\":\"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAccountExecute.sol\":\"IAccountExecute\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap/\",\":forge-std/=lib/forge-std/src/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap/=lib/uniswap/contracts/\"]},\"sources\":{\"contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"struct PackedUserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"bytes32","name":"accountGasLimits","type":"bytes32"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"bytes32","name":"gasFees","type":"bytes32"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"executeUserOp"}],"devdoc":{"kind":"dev","methods":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"params":{"userOp":"- The operation that was just validated.","userOpHash":"- Hash of the user's request data."}}},"version":1},"userdoc":{"kind":"user","methods":{"executeUserOp((address,uint256,bytes,bytes,bytes32,uint256,bytes32,bytes,bytes),bytes32)":{"notice":"Account may implement this execute method. passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash) to the account. The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)"}},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/@openzeppelin/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap/","forge-std/=lib/forge-std/src/","uniswap-v3-core/=lib/uniswap-v3-core/contracts/","uniswap/=lib/uniswap/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/IAccountExecute.sol":"IAccountExecute"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/interfaces/IAccountExecute.sol":{"keccak256":"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c","urls":["bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577","dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh"],"license":"GPL-3.0"},"contracts/interfaces/PackedUserOperation.sol":{"keccak256":"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359","urls":["bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be","dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3"],"license":"GPL-3.0"}},"version":1},"ast":{"absolutePath":"contracts/interfaces/IAccountExecute.sol","id":4055,"exportedSymbols":{"IAccountExecute":[4054],"PackedUserOperation":[4515]},"nodeType":"SourceUnit","src":"36:674:10","nodes":[{"id":4043,"nodeType":"PragmaDirective","src":"36:24:10","nodes":[],"literals":["solidity",">=","0.7",".5"]},{"id":4044,"nodeType":"ImportDirective","src":"62:35:10","nodes":[],"absolutePath":"contracts/interfaces/PackedUserOperation.sol","file":"./PackedUserOperation.sol","nameLocation":"-1:-1:-1","scope":4055,"sourceUnit":4516,"symbolAliases":[],"unitAlias":""},{"id":4054,"nodeType":"ContractDefinition","src":"99:610:10","nodes":[{"id":4053,"nodeType":"FunctionDefinition","src":"596:111:10","nodes":[],"documentation":{"id":4045,"nodeType":"StructuredDocumentation","src":"131:460:10","text":" Account may implement this execute method.\n passing this methodSig at the beginning of callData will cause the entryPoint to pass the full UserOp (and hash)\n to the account.\n The account should skip the methodSig, and use the callData (and optionally, other UserOp fields)\n @param userOp              - The operation that was just validated.\n @param userOpHash          - Hash of the user's request data."},"functionSelector":"8dd7712f","implemented":false,"kind":"function","modifiers":[],"name":"executeUserOp","nameLocation":"605:13:10","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"userOp","nameLocation":"657:6:10","nodeType":"VariableDeclaration","scope":4053,"src":"628:35:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_calldata_ptr","typeString":"struct PackedUserOperation"},"typeName":{"id":4047,"nodeType":"UserDefinedTypeName","pathNode":{"id":4046,"name":"PackedUserOperation","nameLocations":["628:19:10"],"nodeType":"IdentifierPath","referencedDeclaration":4515,"src":"628:19:10"},"referencedDeclaration":4515,"src":"628:19:10","typeDescriptions":{"typeIdentifier":"t_struct$_PackedUserOperation_$4515_storage_ptr","typeString":"struct PackedUserOperation"}},"visibility":"internal"},{"constant":false,"id":4050,"mutability":"mutable","name":"userOpHash","nameLocation":"681:10:10","nodeType":"VariableDeclaration","scope":4053,"src":"673:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4049,"name":"bytes32","nodeType":"ElementaryTypeName","src":"673:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"618:79:10"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[],"src":"706:0:10"},"scope":4054,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IAccountExecute","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[4054],"name":"IAccountExecute","nameLocation":"109:15:10","scope":4055,"usedErrors":[],"usedEvents":[]}],"license":"GPL-3.0"},"id":10}