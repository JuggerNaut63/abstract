{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/@openzeppelin/\",\":@uniswap/v3-core/=lib/uniswap-v3-core/\",\":@uniswap/v3-periphery/=lib/uniswap/\",\":forge-std/=lib/forge-std/src/\",\":uniswap-v3-core/=lib/uniswap-v3-core/contracts/\",\":uniswap/=lib/uniswap/contracts/\"]},\"sources\":{\"lib/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=lib/@openzeppelin/","@uniswap/v3-core/=lib/uniswap-v3-core/","@uniswap/v3-periphery/=lib/uniswap/","forge-std/=lib/forge-std/src/","uniswap-v3-core/=lib/uniswap-v3-core/contracts/","uniswap/=lib/uniswap/contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"paris","libraries":{}},"sources":{"lib/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236","urls":["bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02","dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":15076,"exportedSymbols":{"ReentrancyGuard":[15075]},"nodeType":"SourceUnit","src":"109:3131:85","nodes":[{"id":15008,"nodeType":"PragmaDirective","src":"109:24:85","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":15075,"nodeType":"ContractDefinition","src":"886:2353:85","nodes":[{"id":15012,"nodeType":"VariableDeclaration","src":"1674:40:85","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1699:11:85","scope":15075,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":15011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1713:1:85","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":15015,"nodeType":"VariableDeclaration","src":"1720:36:85","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1745:7:85","scope":15075,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":15014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1755:1:85","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":15017,"nodeType":"VariableDeclaration","src":"1763:23:85","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1779:7:85","scope":15075,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15016,"name":"uint256","nodeType":"ElementaryTypeName","src":"1763:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":15020,"nodeType":"ErrorDefinition","src":"1850:37:85","nodes":[],"documentation":{"id":15018,"nodeType":"StructuredDocumentation","src":"1793:52:85","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"1856:28:85","parameters":{"id":15019,"nodeType":"ParameterList","parameters":[],"src":"1884:2:85"}},{"id":15028,"nodeType":"FunctionDefinition","src":"1893:52:85","nodes":[],"body":{"id":15027,"nodeType":"Block","src":"1907:38:85","nodes":[],"statements":[{"expression":{"id":15025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":15023,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15017,"src":"1917:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":15024,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15012,"src":"1927:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:21:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15026,"nodeType":"ExpressionStatement","src":"1917:21:85"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":15021,"nodeType":"ParameterList","parameters":[],"src":"1904:2:85"},"returnParameters":{"id":15022,"nodeType":"ParameterList","parameters":[],"src":"1907:0:85"},"scope":15075,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":15039,"nodeType":"ModifierDefinition","src":"2322:103:85","nodes":[],"body":{"id":15038,"nodeType":"Block","src":"2346:79:85","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":15031,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15055,"src":"2356:19:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":15032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2356:21:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":15033,"nodeType":"ExpressionStatement","src":"2356:21:85"},{"id":15034,"nodeType":"PlaceholderStatement","src":"2387:1:85"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":15035,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15063,"src":"2398:18:85","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":15036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2398:20:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":15037,"nodeType":"ExpressionStatement","src":"2398:20:85"}]},"documentation":{"id":15029,"nodeType":"StructuredDocumentation","src":"1951:366:85","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2331:12:85","parameters":{"id":15030,"nodeType":"ParameterList","parameters":[],"src":"2343:2:85"},"virtual":false,"visibility":"internal"},{"id":15055,"nodeType":"FunctionDefinition","src":"2431:307:85","nodes":[],"body":{"id":15054,"nodeType":"Block","src":"2470:268:85","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":15044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":15042,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15017,"src":"2558:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":15043,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15015,"src":"2569:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2558:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15049,"nodeType":"IfStatement","src":"2554:86:85","trueBody":{"id":15048,"nodeType":"Block","src":"2578:62:85","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":15045,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15020,"src":"2599:28:85","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":15046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:30:85","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":15047,"nodeType":"RevertStatement","src":"2592:37:85"}]}},{"expression":{"id":15052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":15050,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15017,"src":"2714:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":15051,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15015,"src":"2724:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2714:17:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15053,"nodeType":"ExpressionStatement","src":"2714:17:85"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2440:19:85","parameters":{"id":15040,"nodeType":"ParameterList","parameters":[],"src":"2459:2:85"},"returnParameters":{"id":15041,"nodeType":"ParameterList","parameters":[],"src":"2470:0:85"},"scope":15075,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":15063,"nodeType":"FunctionDefinition","src":"2744:208:85","nodes":[],"body":{"id":15062,"nodeType":"Block","src":"2782:170:85","nodes":[],"statements":[{"expression":{"id":15060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":15058,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15017,"src":"2924:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":15059,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15012,"src":"2934:11:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2924:21:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15061,"nodeType":"ExpressionStatement","src":"2924:21:85"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2753:18:85","parameters":{"id":15056,"nodeType":"ParameterList","parameters":[],"src":"2771:2:85"},"returnParameters":{"id":15057,"nodeType":"ParameterList","parameters":[],"src":"2782:0:85"},"scope":15075,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":15074,"nodeType":"FunctionDefinition","src":"3131:106:85","nodes":[],"body":{"id":15073,"nodeType":"Block","src":"3195:42:85","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":15071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":15069,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15017,"src":"3212:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":15070,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15015,"src":"3223:7:85","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3212:18:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":15068,"id":15072,"nodeType":"Return","src":"3205:25:85"}]},"documentation":{"id":15064,"nodeType":"StructuredDocumentation","src":"2958:168:85","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3140:23:85","parameters":{"id":15065,"nodeType":"ParameterList","parameters":[],"src":"3163:2:85"},"returnParameters":{"id":15068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15074,"src":"3189:4:85","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15066,"name":"bool","nodeType":"ElementaryTypeName","src":"3189:4:85","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3188:6:85"},"scope":15075,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":15009,"nodeType":"StructuredDocumentation","src":"135:750:85","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[15075],"name":"ReentrancyGuard","nameLocation":"904:15:85","scope":15076,"usedErrors":[15020],"usedEvents":[]}],"license":"MIT"},"id":85}